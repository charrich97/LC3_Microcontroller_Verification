uvmf:
  environments:
    "memaccess" :
      ## Agents are defined in a LIST so that the order is maintained. This is important
      ## because of how the BFMs are passed in at the bench utilize this same order when
      ## this environment's initialize() routine is called.
      agents :
        - name: "memaccess_in_agent_h"
          type: "memaccess_in"
          initiator_responder: "INITIATOR"
        - name: "memaccess_out_agent_h"
          type: "memaccess_out"
          initiator_responder: "INITIATOR"
      ## Analysis components are defined externally in a 'util_components' structure.
      ## They are instantiated here.
      analysis_components :
        - name: "memaccess_predictor_h"
          type: "memaccess_predictor"
      ## Each scoreboard is keyed by the scoreboard instantiation name with
      ## information on the scoreboard type and what type of transaction it
      ## will be parsing
      scoreboards : 
        - name: "memaccess_scoreboard_h"
          sb_type: "uvmf_in_order_race_scoreboard"
          trans_type: "memaccess_out_transaction"
      ## Define top-level analysis ports here. Keyed by the name of each
      ## one, specify the type of transaction passing through as well as
      ## which internal component will be driving the AP.
      ## Define top-level analysis exports. Keyed by the unique name of each
      ## one, specify the type of transaction passing through as well as
      ## which internal component will be driven by this port.
      ## Define internal TLM connections. Each entry must have a 'driver' and
      ## a 'receiver' entry used to determine the full connection.
      tlm_connections :
        - driver:   "memaccess_in_agent_h.monitored_ap"
          receiver: "memaccess_predictor_h.observed_memaccess_in"
        - driver:   "memaccess_out_agent_h.monitored_ap"
          receiver: "memaccess_scoreboard_h.actual_analysis_export"
        - driver:   "memaccess_predictor_h.pred_memaccess_out"
          receiver: "memaccess_scoreboard_h.expected_analysis_export"
      ## Environment-level configuration variables. Each entry is keyed with a 
      ## unique name and is assigned a 'type' and 'isrand' value.
      ## Environment-level configuration constraints. Each entry is keyed with
      ## a unique name  with the value being an SVA constraint block
      imports:
        - name: "lc3_prediction_pkg"
